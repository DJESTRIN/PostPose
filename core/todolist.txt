(1) Coming up with behavior specific code (TST, open field )
    - For open field, How do we calculate where center of FOV is and the number of crossings of center. 
            - include plotting overlay so we know what the circle looks like
            - define center with x and y coordinates and then define radius based on number of pixels/cms 
            - boolean logic of if body part is inside of circle or not. 
            - count number of times in and out based on logic above.
            - Amount of time in center vs sides?
            - speed/mag in center vs sides.
    - TST


(3) Double check speed, distance and accel_mag functions make sense. 
    - Kenneth?
    - Should the speed, distance and accel_mag be converted to centimeters? If so, we need a input at the beginning that converts pixels to cms. 

(4) Include code to check if a file has already been run and skip if it has, unless manual override 
    - David & 

    import os

    listoffiles=['/path/to/file.csv']
    output_file_extension='.pkl'

    def run_files(list_of_files,output_file_extension):
        for file in list_of_files:
            basename,_=file.split('.cs')
            basename+=output_file_extension
            if os.path.isfile(basename)  # True or False
                continue
            else:
                # run the code

